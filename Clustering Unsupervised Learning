import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
customer_data = pd.read_csv(r'C:\Users\ankus\OneDrive\Desktop\PYTHON\Python_DS_INTERNSHIP\DATASETS\Mall_Customers.csv')
customer_data.head()
customer_data.describe()
customer_data.shape
customer_data.isnull().sum()

x = customer_data.iloc[:, [3,4]].values
print(x)
from sklearn.cluster import KMeans
wcss = []
for i in range(1,11):
    kmeans = KMeans(n_clusters = i, init ='k-means++', random_state = 42)
    kmeans.fit(x)
    wcss.append(kmeans.inertia_)

plt.plot(range(1,11), wcss)
plt.title('The Elbow Graph')
plt.xlabel('No Of Cluster')
plt.ylabel('WCSS')
plt.show()
kmeans = KMeans(n_clusters = 5, init='k-means++')
y = kmeans.fit_predict(x)
print(y)
plt.figure(figsize=(8,8))
plt.scatter(x[y==0,0], x[y==0,1], c='blue', label = 'customer_category-A')
plt.scatter(x[y==1,0], x[y==1,1], c='red', label = 'customer_category-B')
plt.scatter(x[y==2,0], x[y==2,1], c='black', label = 'customer_category-C')
plt.scatter(x[y==3,0], x[y==3,1], c='orange', label = 'customer_category-D')
plt.scatter(x[y==4,0], x[y==4,1], c='green', label = 'customer_category-E')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 100, c = 'cyan', label = 'Centroid')
plt.title('Customer Categories')
plt.xlabel('Customer Annual Income')
plt.ylabel('Customer Annual Spending')
plt.show()
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s = 100, c = 'cyan', label = 'Centroid')

# ALGORITHM WITH DATASET - 2.
weather_data = pd.read_csv(r'C:\Users\ankus\OneDrive\Desktop\PYTHON\Python_DS_INTERNSHIP\DATASETS\minute_weather.csv')
weather_data.head()
weather_data.describe()
weather_data.shape
weather_data.isnull().sum()
cleared_data = weather_data.dropna()
cleared_data.isnull().sum()
interested_columns = cleared_data.iloc[::10,[3,12]].values
print(interested_columns)
interested_columns.shape
from sklearn.cluster import KMeans
wcss2 = []
for i in range(1,11):
    kmeans2 = KMeans(n_clusters = i, init ='k-means++', random_state = 42)
    kmeans2.fit(interested_columns)
    wcss2.append(kmeans2.inertia_)
sns.set()
plt.plot(range(1,11), wcss2) # plt.plot(x-axis points, y-axis points)
plt.title('The Elbow Graph')
plt.xlabel('No Of Cluster')
plt.ylabel('WCSS2')
plt.show()
kmeans2 = KMeans(n_clusters = 3, init='k-means++')
y2 = kmeans2.fit_predict(interested_columns) # fit_predict=Compute cluster centers and predict cluster index for each sample.
print(y2)
y2.shape
plt.figure(figsize=(8,8))
plt.scatter(interested_columns[y2==0,0], interested_columns[y2==0,1], c='green', label = 'humidity_category-A')
plt.scatter(interested_columns[y2==1,0], interested_columns[y2==1,1], c='orange', label = 'humidity_category-B')
plt.scatter(interested_columns[y2==2,0], interested_columns[y2==2,1], c='white', label = 'humidity_category-C')
plt.scatter(kmeans2.cluster_centers_[:, 0], kmeans2.cluster_centers_[:, 1], s = 100, c = 'blue', label = 'Centroid')
plt.title('air_temp VS relative_humidity')
plt.xlabel('AIR_TEMP')
plt.ylabel('HUMIDITY')
plt.show()
