import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import sklearn.datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics
house_price_dataset = sklearn.datasets.load_boston()
print(house_price_dataset)
house_df = pd.DataFrame(house_price_dataset.data, columns=house_price_dataset.feature_names)
print(house_df.head())
print(house_price_dataset.DESCR)
house_df['price'] = house_price_dataset.target
house_df.head()
print(house_df.shape)
print(house_df.isnull().sum())
print(house_df.describe())
correlation = house_df.corr()
plt.figure(figsize=(10,10))
sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')
print(house_df.head())
x = house_df.drop(['price'], axis=1)
y = house_df['price']
print(x.shape)
print(y.shape)
X_train, X_test, Y_train, Y_test = train_test_split(x, y, test_size=0.1, random_state=2)
print(X_train.shape, X_test.shape, Y_train.shape, Y_test.shape)
print(X_train.head())
print(Y_train.head())
model = LinearRegression()
model.fit(X_train, Y_train)
train_data_prediction = model.predict(X_train)
print(train_data_prediction)
test_data_prediction = model.predict(X_test)
print(test_data_prediction)
